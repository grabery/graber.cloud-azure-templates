{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "environmentName": {
            "defaultValue": "test",
            "type": "string"
        },
        "hub-region": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String"
        },
        "virtualNetworks_hub-vnet_name": {
            "defaultValue": "vnet-hub-$TEST/PROD-$LOCATION-001",
            "type": "String"
        },
        "bastionHosts_name": {
            "defaultValue": "bast-hub-$TEST/PROD-$LOCATION-001",
            "type": "String"
        },
        "spoke1-region": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String"
        },
        "virtualNetworks_spoke1_name": {
            "defaultValue": "vnet-spoke-$TEST/PROD-$LOCATION-001",
            "type": "String"
        },
        "spoke2-region": {
            "defaultValue": "[resourceGroup().location]",
            "type": "String"
        },
        "virtualNetworks_spoke2_name": {
            "defaultValue": "vnet-spoke-$TEST/PROD-$LOCATION-002",
            "type": "String"
        },
        "networkSecurityGroups_hub_DMZ": {
            "defaultValue":"nsg-hub-dmz-001",
            "type": "String"
        },
        "networkSecurityGroups_hub_AzureBastionSubnet": {
            "defaultValue":"nsg-hub-azurebastionsubnet-001",
            "type": "String"
        },        
        "networkSecurityGroups_spoke1": {
            "defaultValue": "nsg-spoke-default-001",
            "type": "String"
        },
        "networkSecurityGroups_spoke2": {
            "defaultValue": "nsg-spoke-default-002",
            "type": "String"
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroups_hub_DMZ')]",
            "location": "[parameters('hub-region')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "INallowPort3389",
                        "properties": {
                            "description": "This rule does allow inbound connections using port 3389 from Bastion",
                            "priority": 110,
                            "protocol": "*",
                            "sourcePortRange": "3389",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "10.0.0.0/24",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "INallowPort22",
                        "properties": {
                            "description": "This rule does allow inbound connections using port 22 from Bastion",
                            "priority": 120,
                            "protocol": "tcp",
                            "sourcePortRange": "22",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "10.0.0.0/24",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroups_hub_AzureBastionSubnet')]",
            "location": "[parameters('hub-region')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "OUTallowPort3389",
                        "properties": {
                            "description": "This rule does allow outbound connections using port 3389 to the vnet",
                            "priority": 110,
                            "protocol": "*",
                            "sourcePortRange": "3389",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "OUTallowPort22",
                        "properties": {
                            "description": "This rule does allow outbound connections using port 22 to the vnet",
                            "priority": 120,
                            "protocol": "tcp",
                            "sourcePortRange": "22",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "OUTallowPort443",
                        "properties": {
                            "description": "This rule does allow outbound connections using port 443 to AzureCloud",
                            "priority": 130,
                            "protocol": "*",
                            "sourcePortRange": "443",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "AzureCloud",
                            "access": "Allow",
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "INallowPort443",
                        "properties": {
                            "description": "This rule does allow inbound connections using port 443 to AzureBastion",
                            "priority": 100,
                            "protocol": "*",
                            "sourcePortRange": "443",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroups_spoke1')]",
            "location": "[parameters('spoke1-region')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "INallowPort3389",
                        "properties": {
                            "description": "This rule does allow inbound connections using port 3389 from Bastion",
                            "priority": 110,
                            "protocol": "*",
                            "sourcePortRange": "3389",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "10.0.0.0/24",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "INallowPort22",
                        "properties": {
                            "description": "This rule does allow inbound connections using port 22 from Bastion",
                            "priority": 120,
                            "protocol": "tcp",
                            "sourcePortRange": "22",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "10.0.0.0/24",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroups_spoke2')]",
            "location": "[parameters('spoke2-region')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "INallowPort3389",
                        "properties": {
                            "description": "This rule does allow inbound connections using port 3389 from Bastion",
                            "priority": 110,
                            "protocol": "*",
                            "sourcePortRange": "3389",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "10.0.0.0/24",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "INallowPort22",
                        "properties": {
                            "description": "This rule does allow inbound connections using port 22 from Bastion",
                            "priority": 120,
                            "protocol": "tcp",
                            "sourcePortRange": "22",
                            "destinationPortRange": "22",
                            "sourceAddressPrefix": "10.0.0.0/24",
                            "destinationAddressPrefix": "VirtualNetwork",
                            "access": "Allow",
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-05-01",
            "name": "[concat('pip-', parameters('bastionHosts_name'))]",
            "location": "[parameters('hub-region')]",
            "sku": {
                "name": "Standard"
            },
            "properties": {
                "publicIPAddressVersion": "IPv4",
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "ipTags": []
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('virtualNetworks_spoke2_name')]",
            "location": "[parameters('spoke2-region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.2.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "spoke2-to-hub-peering",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.0.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('virtualNetworks_spoke1_name')]",
            "location": "[parameters('spoke1-region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "default",
                        "properties": {
                            "addressPrefix": "10.1.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "spoke1-to-hub-peering",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.0.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_hub-vnet_name'), '/AzureBastionSubnet')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_hub_AzureBastionSubnet'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_hub_AzureBastionSubnet'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_spoke2_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_spoke2_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spoke2'))]"
            ],
            "properties": {
                "addressPrefix": "10.2.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spoke2'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_spoke1_name'), '/default')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_spoke1_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spoke1'))]"
            ],
            "properties": {
                "addressPrefix": "10.1.0.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_spoke1'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/subnets",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_hub-vnet_name'), '/DMZ')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_hub_DMZ'))]"
            ],
            "properties": {
                "addressPrefix": "10.0.2.0/24",
                "delegations": [],
                "privateEndpointNetworkPolicies": "Enabled",
                "privateLinkServiceNetworkPolicies": "Enabled",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroups_hub_DMZ'))]"
                }
            }
        },
        {
            "type": "Microsoft.Network/bastionHosts",
            "apiVersion": "2020-05-01",
            "name": "[parameters('bastionHosts_name')]",
            "location": "[parameters('hub-region')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip-', parameters('bastionHosts_name')))]",
                "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_hub-vnet_name'), 'AzureBastionSubnet')]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "IpConf",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat('pip-', parameters('bastionHosts_name')))]"
                            },
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworks_hub-vnet_name'), 'AzureBastionSubnet')]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-05-01",
            "name": "[parameters('virtualNetworks_hub-vnet_name')]",
            "location": "[parameters('hub-region')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "DMZ",
                        "properties": {
                            "addressPrefix": "10.0.2.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    },
                    {
                        "name": "AzureBastionSubnet",
                        "properties": {
                            "addressPrefix": "10.0.0.0/24",
                            "delegations": [],
                            "privateEndpointNetworkPolicies": "Enabled",
                            "privateLinkServiceNetworkPolicies": "Enabled"
                        }
                    }
                ],
                "virtualNetworkPeerings": [
                    {
                        "name": "hub-to-spoke1-peering",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_spoke1_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.1.0.0/16"
                                ]
                            }
                        }
                    },
                    {
                        "name": "hub-to-spoke2-peering",
                        "properties": {
                            "peeringState": "Connected",
                            "remoteVirtualNetwork": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_spoke2_name'))]"
                            },
                            "allowVirtualNetworkAccess": true,
                            "allowForwardedTraffic": true,
                            "allowGatewayTransit": false,
                            "useRemoteGateways": false,
                            "remoteAddressSpace": {
                                "addressPrefixes": [
                                    "10.2.0.0/16"
                                ]
                            }
                        }
                    }
                ],
                "enableDdosProtection": false,
                "enableVmProtection": false
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_hub-vnet_name'), '/peer-hub-to-spoke-', parameters('environmentName'), '-002')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_spoke2_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/virtualNetworkPeerings', parameters('virtualNetworks_hub-vnet_name'), '/peer-hub-to-spoke-', parameters('environmentName'), '-001')]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_spoke2_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.2.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_hub-vnet_name'), '/peer-hub-to-spoke-', parameters('environmentName'), '-001')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_spoke1_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_spoke1_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.1.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_spoke2_name'), '/peer-spoke-', parameters('environmentName'), '-002', '-to-hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_spoke2_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks/virtualNetworkPeerings",
            "apiVersion": "2020-05-01",
            "name": "[concat(parameters('virtualNetworks_spoke1_name'), '/peer-spoke-', parameters('environmentName'), '-001', '-to-hub')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_spoke1_name'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]"
            ],
            "properties": {
                "peeringState": "Connected",
                "remoteVirtualNetwork": {
                    "id": "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworks_hub-vnet_name'))]"
                },
                "allowVirtualNetworkAccess": true,
                "allowForwardedTraffic": true,
                "allowGatewayTransit": false,
                "useRemoteGateways": false,
                "remoteAddressSpace": {
                    "addressPrefixes": [
                        "10.0.0.0/16"
                    ]
                }
            }
        }
    ]
}
